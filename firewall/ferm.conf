# -*- shell-script -*-
#
#  Configuration file for ferm(1).
#

table nat {
    chain ( PREROUTING INPUT OUTPUT ) { policy ACCEPT; }
    chain POSTROUTING {
	policy ACCEPT;
	proto ( tcp udp ) saddr xxx.xxx.xxx.0/24 daddr ! xxx.xxx.xxx.0/24 MASQUERADE to-ports 1024-65535;
	saddr xxx.xxx.xxx.0/24 daddr ! xxx.xxx.xxx.0/24 MASQUERADE;
	outerface tap0 MASQUERADE;
    }
}

table mangle {
    chain ( PREROUTING INPUT FORWARD OUTPUT POSTROUTING ) { policy ACCEPT ; }
}


    ##blackhole ipset hash generation/handling.
	@hook pre 'ipset -exist create blackhole hash:ip timeout 600';
	@hook flush 'ipset flush blackhole';

    ##proxies ipset hash generation/handling.
	@hook pre 'ipset -exist create proxies hash:ip,port';
	@hook pre 'ipset flush proxies ; echo "xxx.xxx.xxx.xx,80 xxx.xxx.xxx.xx,443" | xargs -d" " -P4 -I{} echo "add proxies {}" | ipset - 1>dev/null';
	@hook flush 'ipset flush proxies';

    ##spammers ipset hash generation/handling.
	@hook pre 'ipset -exist create spammers hash:net';
	@hook pre 'ipset flush spammers ; cat /etc/spammers | xargs -d"\n" -P4 -I{} echo "add spammers {}" | ipset - 1>/dev/null';
	@hook flush 'ipset flush spammers';


    ##trustnets ipset hash generation/handling.
	@hook pre 'ipset -exist create trustout hash:net';
	@hook pre 'ipset -exist create trustin hash:net';
	@hook pre 'ipset flush trustout ; echo "xxx.xxx.xxx.0/24 xxx.xxx.xxx.xxx 127.0.0.1/32" | xargs -d" " -P4 -I{} echo "add trustout {}" | ipset - 1>/dev/null';
	@hook pre 'ipset flush trustin ; echo "xxx.xxx.xxx.0/24 xxx.xxx.xxx.xxx xxx.xxx.xxx.xxx xxx.xxx.xxx.xxx" | xargs -d" " -P4 -I{} echo "add trustin {}" | ipset - 1>/dev/null';
	@hook flush 'ipset flush trustout';
	@hook flush 'ipset flush trustin';

    ##trustforwards ipset hash generation/handling.
	@hook pre 'ipset -exist create trustforward hash:net';
	@hook pre 'ipset flush trustforward ; echo "xxx.xxx.xxx.0/24 xxx.xxx.xxx.xxx/32" | xargs -d" " -P4 -I{} echo "add trustforward {}" | ipset - 1>/dev/null';
	@hook flush 'ipset flush trustforward';

    ##fileport/filenet ipset handling/generation.
	@hook pre 'ipset -exist create fileport bitmap:port range 0-10000';
	@hook pre 'ipset flush fileport; echo "873 2049" | xargs -d" " -P4 -I{} echo "add fileport {}" | ipset - 1>/dev/null;';
	@hook flush 'ipset flush fileport';
	@hook pre 'ipset -exist create filenet hash:net';
	@hook pre 'ipset flush filenet; echo "xxx.xxx.xxx.xxx/32 xxx.xxx.xxx.0/24" | xargs -d" " -P4 -I{} echo "add filenet {}" | ipset - 1>/dev/null;';
	@hook flush 'ipset flush filenet';

table filter {

    chain INPUT {
        policy DROP;

        # connection tracking
        mod state state INVALID DROP;
        mod state state (ESTABLISHED RELATED) ACCEPT;

        # allow local packet
        interface ( lo virbr0 tap0 wlan0 ) ACCEPT;

	proto all {
		mod set set trustin src ACCEPT;
		mod set set blackhole src DROP;
		saddr ( xxx.xxx.xxx.xxx xxx.xxx.xxx.0/24 ) DROP;
	}

	proto all mod set set spammers src @subchain "SPAMMERS" {
		ULOG log-prefix "Blocked-IP per rule $LINE: " ulog-nlgroup 1;
                SET add-set blackhole src;
		DROP;
	}


        # respond to ping
        proto icmp ACCEPT; 

        # allow IPsec
        proto udp dport 500 ACCEPT;
	ULOG ulog-prefix "IPSec connection event: " ulog-nlgroup 1 proto (esp ah);
        proto (esp ah) ACCEPT;

        # enable services
        proto tcp {
		# Restrict unknown hosts to no more than 8 ssh attempts every three minutes.
		dport ssh @subchain SSH-ALL {
			mod recent name SSH {
				set NOP;
				update seconds 180 hitcount 8 @subchain SSH-BLOCKED {
					ULOG ulog-prefix "Blocked-ssh per rule $LINE: " ulog-nlgroup 1;
					SET add-set blackhole src;
					DROP;
				}
			}
		ACCEPT;
		}
		dport ( domain http https ) ACCEPT;
		mod set set filenet src @subchain FILETRANSFER {
			mod set set fileport dst ACCEPT;
			RETURN;
		}
		sport ( ldap ldaps ) ACCEPT;
		mod set set proxies src ACCEPT;
	}

	proto udp {
		mod set set trustout dst @subchain TRUSTIN-UDP {
			dport domain ACCEPT;
			mod set set fileport src ACCEPT;
			RETURN;
		}
	}
    }
    chain OUTPUT {
        policy ACCEPT;

        # connection tracking
        #mod state state INVALID DROP;
        mod state state (ESTABLISHED RELATED) ACCEPT;

	# Trusted Private
	proto all { 
		mod set set trustout src ACCEPT;
		mod set set trustin src @subchain TRUSTIN-OUTPUT {
			mod set set trustout dst ACCEPT;
		}
		mod set set trustout dst ACCEPT;
	}
	proto tcp {
		dport ( ssh smtp http https ldap ldaps domain ) ACCEPT;
		sport ( http https ) ACCEPT;
	}
	proto udp {
		dport domain ACCEPT ;
	}
    }
    chain FORWARD {
        policy DROP;

        # connection tracking
        mod state state INVALID DROP;
        mod state state (ESTABLISHED RELATED) ACCEPT;

	saddr ( xxx.xxx.xxx.xxx xxx.xxx.xxx.0/24 ) DROP;
	mod set set trustforward src @subchain TRUSTFORWARDS {
		mod set set trustforward dst ACCEPT;
		RETURN;
	}
	proto tcp {
		mod set set proxies src ACCEPT;
		mod set set proxies dst ACCEPT;
		RETURN;
	}
    }
}
