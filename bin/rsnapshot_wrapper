#!/usr/local/bin/bash
export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin:/home/ian/bin

##-- Configuration --##

  #- Hashtable declarations
  declare -A old
  declare -A ages
  declare -A needs
  #- 
  
  working_dir=$(pwd)
  needs=( [monthly]="0" [weekly]="0" [daily]="0" [hourly]="0" )
  intervals=("monthly" "weekly" "daily" "hourly")
  old=( [monthly]="2678400" [weekly]="604800" [daily]="86400" [hourly]="3600" )

##-- End Configuration -- ##

##-- Functions --##

  determine_ages(){
  	## Prepares the 'ages' hashtable.
  	# 'ages' reads the number of seconds-ago each interval-folder was accessed.
  	cd /zraid0/backup/rsnapshot
  	for i in `ls`; do
  		ages["$i"]="$(( $(date +%s) - $(stat -f %a "$i") ))"
  	done
  	cd $working_dir
  }
  determine_needed(){
  	## Prepares the 'needs' hashtable.
  	# 'needs' sets to '1' any interval.0 value which is older than its interval.
  	for interval in ${intervals[@]}; do 
  		to_check=${interval}".0"
		echo ${ages[$to_check]}
  		if [ ${ages[$to_check]} -gt ${old[$interval]} ] ; then
  			needs[$interval]="1"
  		fi
  	done 
  }
  run_all_needed(){
  	## Executes each rsnapshot instance currently in need of being run.
  	# Assumes only "hourly" is non-rotational in nature.
  	for interval in ${intervals[@]} ; do
  	        if [ ${needs[$interval]} -eq "1" ] ; then
                  	nohup rsnapshot $interval && exit 0 &
			echo ''
  	        fi
		if [ ${needs[$interval]} -eq "1" ] && [ $interval != "hourly" ] ; then
			sleep 60
		fi
  	done
  }
  cleanup(){
  	## Cleans up old rsnapshot instances.
  	# Maximum duration of 3 hours.
  	rsnapshot_pid=$(/usr/local/bin/pstree $(pgrep perl) | awk '/rsnapshot/ {print $2}' )
  	sleep $(( ${old[hourly]} * 3 )) 
  	new_rsnapshot_pid=$(/usr/local/bin/pstree $(pgrep perl) | awk '/rsnapshot/ {print $2}' )
  	[ "$rsnapshot_pid" = "$new_rsnapshot_pid" ] && kill -9 $rsnapshot_pid 
  }

##-- End Functions --##

##-- RUNTIME --##

  determine_ages
  determine_needed
  run_all_needed
  cleanup
  exit 0

##-- END RUNTIME --##
