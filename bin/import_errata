#!/bin/bash
##############################################################
#
# Written 2012-09-25 by Logos01
# Imports CentOS errata into Spacewalk.
# Usage: /usr/local/bin/import_errata {-d|--debug} {-v|--verbose} {-p|--publish}
# (If no arguments given, script will presume intent to publish errata normally.)
#
# 2012-12-27 - Added logic to check for and pull down the errata-import.pl script
#              if not already present and executable.
# 2012-12-27 - Added import of RHSA OVAL file.
# 
#
##############################################################


set -e

##-- CONFIGURATION --##


  ## Environment preparation
  #- 
  export PATH=/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin
  # Where "/etc/spacewalk" is a file containing two lines: line 1 is username; line 2 is password.
  export SPACEWALK_USER=`sed -n '1p' /etc/spacewalk`
  export SPACEWALK_PASS=`sed -n '2p' /etc/spacewalk`
  #-  

##-- END CONFIGURATION --##

##-- FUNCTIONS --##
  usage(){
    echo "Usage: /usr/local/bin/import_errata {-d|--debug} {-v|--verbose} {-p|--publish}"
    echo "      If no arguments given, --publish is assumed."
    echo "      Imports CentOS errata into Spacewalk server."
    exit 0
  }

  error(){
    local PARENT_LINENO="$1" ; local MESSAGE="$2" ; local CODE="${3:-1}"
    if [[ -n "$MESSAGE" ]] ; then
      echo "Error on or near line ${PARENT_LINENO}: ${MESSAGE}; exiting with status ${CODE}"
    else
      echo "Error on or near line ${PARENT_LINENO}; exiting with status ${CODE}"
    fi
    exit "${CODE}"
  }

  environment_check(){
   environment_args=($@)
   if [ ! -x /usr/local/bin/errata-import.pl ] ; then
     mkdir /tmp/errata 
     if $(arg_check '--debug|-d' ${environment_args[@]} ) ; then
       wget -v -O /tmp/errata/ http://cefs.steve-meier.de/errata-import.tar
     else 
       wget -q -O /tmp/errata http://cefs.steve-meier.de/errata-import.tar
     fi
     cd /tmp/errata ; tar xf errata-import.tar
     chmod +x errata-import.pl
      cp /tmp/errata/* /usr/local/bin ; rm -f /usr/local/bin/errata-import.tar
     cd -
     rm -rf /tmp/errata
   fi
  }
  
  arg_check(){
    ## Checks array ($2) for regex in $1
    check_args=($@)
    echo ${check_args[@]:1} | egrep -q "(${check_args[0]})"
  }

  pulldown_file(){
    ## Pulls down errata.latest.xml into expected location.
    pulldown_args=($@)
    export http_proxy=`cat /etc/secure/proxy_file`
    export HTTP_PROXY=$HTTP_PROXY
    if $(arg_check '--debug|-d ' ${pulldown_args[@]}) ; then
      WGET1="wget -v -O /tmp/errata.latest.xml http://cefs.steve-meier.de/errata.latest.xml"
      WGET2="wget -v -O /tmp/com.redhat.rhsa-all.xml https://www.redhat.com/security/data/oval/com.redhat.rhsa-all.xml"
    else 
      WGET1="wget -q -O /tmp/errata.latest.xml http://cefs.steve-meier.de/errata.latest.xml"
      WGET2="wget -q -O /tmp/com.redhat.rhsa-all.xml https://www.redhat.com/security/data/oval/com.redhat.rhsa-all.xml"
    fi
    $WGET1
    $WGET2
  }
  
  import_errata(){
    ## Configures invocation of errata-import script based on args and executes.
    import_args=($@)
    import_flags=(\
     "--errata /tmp/errata.latest.xml"\
     "--rhsa-oval /tmp/com.redhat.rhsa-all.xml"\
     "--security"\
     "--enhancement"\
     "--bugfix"\
     ) 
  
    $(arg_check '--publish|-p ' ${import_args[@]}) && import_flags=( ${import_flags[@]} "--publish" )
    $(arg_check '--debug|-d ' ${import_args[@]}) && import_flags=( ${import_flags[@]} "--debug" )
  
    IMPORT="errata-import.pl --server spacewalk.virt.net"
    for val in ${import_flags[@]}; do 
      IMPORT="$IMPORT "${val}
    done
  
    $(arg_check '--debug|-d ' ${import_args[@]}) \
    && IMPORT="$IMPORT 2>&1" \
    || IMPORT="$IMPORT 1>/dev/null"  
  
    $IMPORT
  }

##-- END FUNCTIONS --##

##-- RUNTIME --##

  trap 'error ${LINENO}' ERR

  ## Argument handling
  #-
  args=($@)
  $(arg_check '--verbose|-v' ${args[@]}) && set -v
  $(arg_check '--debug|-d' ${args[@]}) && set -x
  $(arg_check '--help|--usage|-h' ${args[@]}) && usage
  [ "$args" = "" ] && args=("--publish")
  #-
  echo ${args[@]} 

  environment_check ${args[@]}
  pulldown_file ${args[@]}
  import_errata ${args[@]}


##-- END RUNTIME --##
